/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Retail as PrismaRetail } from "@prisma/client";

export class RetailServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.RetailCountArgs, "select">): Promise<number> {
    return this.prisma.retail.count(args);
  }

  async retails(args: Prisma.RetailFindManyArgs): Promise<PrismaRetail[]> {
    return this.prisma.retail.findMany(args);
  }
  async retail(
    args: Prisma.RetailFindUniqueArgs
  ): Promise<PrismaRetail | null> {
    return this.prisma.retail.findUnique(args);
  }
  async createRetail(args: Prisma.RetailCreateArgs): Promise<PrismaRetail> {
    return this.prisma.retail.create(args);
  }
  async updateRetail(args: Prisma.RetailUpdateArgs): Promise<PrismaRetail> {
    return this.prisma.retail.update(args);
  }
  async deleteRetail(args: Prisma.RetailDeleteArgs): Promise<PrismaRetail> {
    return this.prisma.retail.delete(args);
  }
}
