/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Bi as PrismaBi } from "@prisma/client";

export class BiServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BiCountArgs, "select">): Promise<number> {
    return this.prisma.bi.count(args);
  }

  async bis(args: Prisma.BiFindManyArgs): Promise<PrismaBi[]> {
    return this.prisma.bi.findMany(args);
  }
  async bi(args: Prisma.BiFindUniqueArgs): Promise<PrismaBi | null> {
    return this.prisma.bi.findUnique(args);
  }
  async createBi(args: Prisma.BiCreateArgs): Promise<PrismaBi> {
    return this.prisma.bi.create(args);
  }
  async updateBi(args: Prisma.BiUpdateArgs): Promise<PrismaBi> {
    return this.prisma.bi.update(args);
  }
  async deleteBi(args: Prisma.BiDeleteArgs): Promise<PrismaBi> {
    return this.prisma.bi.delete(args);
  }
}
