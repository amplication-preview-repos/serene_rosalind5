/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Ml as PrismaMl } from "@prisma/client";

export class MlServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.MlCountArgs, "select">): Promise<number> {
    return this.prisma.ml.count(args);
  }

  async mls(args: Prisma.MlFindManyArgs): Promise<PrismaMl[]> {
    return this.prisma.ml.findMany(args);
  }
  async ml(args: Prisma.MlFindUniqueArgs): Promise<PrismaMl | null> {
    return this.prisma.ml.findUnique(args);
  }
  async createMl(args: Prisma.MlCreateArgs): Promise<PrismaMl> {
    return this.prisma.ml.create(args);
  }
  async updateMl(args: Prisma.MlUpdateArgs): Promise<PrismaMl> {
    return this.prisma.ml.update(args);
  }
  async deleteMl(args: Prisma.MlDeleteArgs): Promise<PrismaMl> {
    return this.prisma.ml.delete(args);
  }
}
