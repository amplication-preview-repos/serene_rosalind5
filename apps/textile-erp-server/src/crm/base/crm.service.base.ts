/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Crm as PrismaCrm } from "@prisma/client";

export class CrmServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CrmCountArgs, "select">): Promise<number> {
    return this.prisma.crm.count(args);
  }

  async crms(args: Prisma.CrmFindManyArgs): Promise<PrismaCrm[]> {
    return this.prisma.crm.findMany(args);
  }
  async crm(args: Prisma.CrmFindUniqueArgs): Promise<PrismaCrm | null> {
    return this.prisma.crm.findUnique(args);
  }
  async createCrm(args: Prisma.CrmCreateArgs): Promise<PrismaCrm> {
    return this.prisma.crm.create(args);
  }
  async updateCrm(args: Prisma.CrmUpdateArgs): Promise<PrismaCrm> {
    return this.prisma.crm.update(args);
  }
  async deleteCrm(args: Prisma.CrmDeleteArgs): Promise<PrismaCrm> {
    return this.prisma.crm.delete(args);
  }
}
