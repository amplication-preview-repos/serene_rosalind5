/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Plm as PrismaPlm } from "@prisma/client";

export class PlmServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.PlmCountArgs, "select">): Promise<number> {
    return this.prisma.plm.count(args);
  }

  async plms(args: Prisma.PlmFindManyArgs): Promise<PrismaPlm[]> {
    return this.prisma.plm.findMany(args);
  }
  async plm(args: Prisma.PlmFindUniqueArgs): Promise<PrismaPlm | null> {
    return this.prisma.plm.findUnique(args);
  }
  async createPlm(args: Prisma.PlmCreateArgs): Promise<PrismaPlm> {
    return this.prisma.plm.create(args);
  }
  async updatePlm(args: Prisma.PlmUpdateArgs): Promise<PrismaPlm> {
    return this.prisma.plm.update(args);
  }
  async deletePlm(args: Prisma.PlmDeleteArgs): Promise<PrismaPlm> {
    return this.prisma.plm.delete(args);
  }
}
