/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Scm as PrismaScm } from "@prisma/client";

export class ScmServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ScmCountArgs, "select">): Promise<number> {
    return this.prisma.scm.count(args);
  }

  async scms(args: Prisma.ScmFindManyArgs): Promise<PrismaScm[]> {
    return this.prisma.scm.findMany(args);
  }
  async scm(args: Prisma.ScmFindUniqueArgs): Promise<PrismaScm | null> {
    return this.prisma.scm.findUnique(args);
  }
  async createScm(args: Prisma.ScmCreateArgs): Promise<PrismaScm> {
    return this.prisma.scm.create(args);
  }
  async updateScm(args: Prisma.ScmUpdateArgs): Promise<PrismaScm> {
    return this.prisma.scm.update(args);
  }
  async deleteScm(args: Prisma.ScmDeleteArgs): Promise<PrismaScm> {
    return this.prisma.scm.delete(args);
  }
}
