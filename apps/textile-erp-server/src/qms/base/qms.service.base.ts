/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Qms as PrismaQms } from "@prisma/client";

export class QmsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.QmsCountArgs, "select">): Promise<number> {
    return this.prisma.qms.count(args);
  }

  async qmsItems(args: Prisma.QmsFindManyArgs): Promise<PrismaQms[]> {
    return this.prisma.qms.findMany(args);
  }
  async qms(args: Prisma.QmsFindUniqueArgs): Promise<PrismaQms | null> {
    return this.prisma.qms.findUnique(args);
  }
  async createQms(args: Prisma.QmsCreateArgs): Promise<PrismaQms> {
    return this.prisma.qms.create(args);
  }
  async updateQms(args: Prisma.QmsUpdateArgs): Promise<PrismaQms> {
    return this.prisma.qms.update(args);
  }
  async deleteQms(args: Prisma.QmsDeleteArgs): Promise<PrismaQms> {
    return this.prisma.qms.delete(args);
  }
}
